"""
–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ Ruby King
–°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ ID –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
"""

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤: {item_id: item_name}
ITEM_DATABASE = {
    # –†–µ—Å—É—Ä—Å—ã (Resources)
    "m_0_1": "–ó–æ–ª–æ—Ç–æ",
    "m_0_2": "–ß–µ—Ä–µ–ø–∞", 
    "m_1": "–ó–µ–ª—å–µ –ª–µ—á–µ–Ω–∏—è",
    "m_3": "–ó–µ–ª—å–µ –º–∞–Ω—ã",
    "m_11": "–ñ–µ–ª–µ–∑–æ",
    "m_17": "–î—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã–π –∫–∞–º–µ–Ω—å",
    "res_25": "–î–µ—Ä–µ–≤–æ",
    "quest_0_1": "–ö–≤–µ—Å—Ç–æ–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç",
    "book_skill_16_page": "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞–≤—ã–∫–∞ 16",
    
    # –û—Ä—É–∂–∏–µ (Weapons) - –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    "weapon_1": "–ú–µ—á",  # w-1.jpg
    "weapon_46": "–¢–æ–ø–æ—Ä",  # w-46.jpg
    "weapon_47": "–ö–∏–Ω–∂–∞–ª",  # w-47.jpg
    
    # –ë—Ä–æ–Ω—è (Armors) - –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    "armor_81": "–ü–µ—Ä—á–∞—Ç–∫–∏",  # armor-81.jpg
    "armor_86": "–ü–µ—Ä—á–∞—Ç–∫–∏",  # armor-86.jpg
    "armor_89": "–°–∞–ø–æ–≥–∏",  # armor-89.jpg
    "armor_92": "–°–∞–ø–æ–≥–∏",  # armor-92.jpg
    "armor_97": "–®–ª–µ–º",  # armor-97.jpg
    "armor_102": "–ù–∞–≥—Ä—É–¥–Ω–∏–∫",  # armor-102.jpg
    "armor_103": "–ù–∞–≥—Ä—É–¥–Ω–∏–∫",  # armor-103.jpg
    "armor_106": "–ù–∞–≥—Ä—É–¥–Ω–∏–∫",  # armor-106.jpg
    "armor_110": "–®—Ç–∞–Ω—ã",  # armor-110.jpg
    "armor_112": "–®—Ç–∞–Ω—ã",  # armor-112.jpg
    
    # –£–∫—Ä–∞—à–µ–Ω–∏—è (Jewelry) - –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    "jew_2": "–ö–æ–ª—å—Ü–æ",  # jew-2.webp
    "jew_3": "–ê–º—É–ª–µ—Ç",  # jew-3.webp
}

def get_item_name(item_id: str) -> str:
    """
    –ü–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –ø–æ –µ–≥–æ ID
    
    Args:
        item_id: ID –ø—Ä–µ–¥–º–µ—Ç–∞
        
    Returns:
        –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–ª–∏ ID –µ—Å–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
    """
    return ITEM_DATABASE.get(item_id, item_id)

def get_item_category(item_id: str) -> str:
    """
    –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–µ–¥–º–µ—Ç–∞ –ø–æ –µ–≥–æ ID
    
    Args:
        item_id: ID –ø—Ä–µ–¥–º–µ—Ç–∞
        
    Returns:
        –ö–∞—Ç–µ–≥–æ—Ä–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞
    """
    if item_id.startswith("m_") or item_id.startswith("res_") or item_id.startswith("quest_") or item_id.startswith("book_"):
        return "–†–µ—Å—É—Ä—Å—ã"
    elif item_id.startswith("weapon_"):
        return "–û—Ä—É–∂–∏–µ"
    elif item_id.startswith("armor_"):
        return "–ë—Ä–æ–Ω—è"
    elif item_id.startswith("jew_"):
        return "–£–∫—Ä–∞—à–µ–Ω–∏—è"
    else:
        return "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

def format_item_display(item_id: str, count: int = 1) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –¥–ª—è UI
    
    Args:
        item_id: ID –ø—Ä–µ–¥–º–µ—Ç–∞
        count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
        
    Returns:
        –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    """
    item_name = get_item_name(item_id)
    category = get_item_category(item_id)
    
    if count == 1:
        return f"{item_name} ({category})"
    else:
        return f"{item_name} x{count} ({category})"

def get_item_emoji(item_id: str) -> str:
    """
    –ü–æ–ª—É—á–∏—Ç—å —ç–º–æ–¥–∑–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞
    
    Args:
        item_id: ID –ø—Ä–µ–¥–º–µ—Ç–∞
        
    Returns:
        –≠–º–æ–¥–∑–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞
    """
    emoji_map = {
        # –†–µ—Å—É—Ä—Å—ã
        "m_0_1": "üí∞",  # –ó–æ–ª–æ—Ç–æ
        "m_0_2": "üíÄ",  # –ß–µ—Ä–µ–ø–∞
        "m_1": "üíö",   # –ó–µ–ª—å–µ –ª–µ—á–µ–Ω–∏—è
        "m_3": "üîµ",   # –ó–µ–ª—å–µ –º–∞–Ω—ã
        "m_11": "‚öíÔ∏è",  # –ñ–µ–ª–µ–∑–æ
        "m_17": "üíé",  # –î—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã–π –∫–∞–º–µ–Ω—å
        "res_25": "ü™µ", # –î–µ—Ä–µ–≤–æ
        "quest_0_1": "üìú", # –ö–≤–µ—Å—Ç–æ–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç
        "book_skill_16_page": "üìñ", # –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞–≤—ã–∫–∞
        
        # –û—Ä—É–∂–∏–µ
        "weapon_1": "‚öîÔ∏è",   # –ú–µ—á
        "weapon_46": "ü™ì",  # –¢–æ–ø–æ—Ä
        "weapon_47": "üó°Ô∏è",  # –ö–∏–Ω–∂–∞–ª
        
        # –ë—Ä–æ–Ω—è
        "armor_81": "üß§",   # –ü–µ—Ä—á–∞—Ç–∫–∏
        "armor_86": "üß§",   # –ü–µ—Ä—á–∞—Ç–∫–∏
        "armor_89": "üë¢",   # –°–∞–ø–æ–≥–∏
        "armor_92": "üë¢",   # –°–∞–ø–æ–≥–∏
        "armor_97": "ü™ñ",   # –®–ª–µ–º
        "armor_102": "üõ°Ô∏è",  # –ù–∞–≥—Ä—É–¥–Ω–∏–∫
        "armor_103": "üõ°Ô∏è",  # –ù–∞–≥—Ä—É–¥–Ω–∏–∫
        "armor_106": "üõ°Ô∏è",  # –ù–∞–≥—Ä—É–¥–Ω–∏–∫
        "armor_110": "üëñ",  # –®—Ç–∞–Ω—ã
        "armor_112": "üëñ",  # –®—Ç–∞–Ω—ã
        
        # –£–∫—Ä–∞—à–µ–Ω–∏—è
        "jew_2": "üíç",      # –ö–æ–ª—å—Ü–æ
        "jew_3": "üìø",      # –ê–º—É–ª–µ—Ç
    }
    
    return emoji_map.get(item_id, "‚ùì")

def format_item_display_with_emoji(item_id: str, count: int = 1) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –¥–ª—è UI —Å —ç–º–æ–¥–∑–∏
    
    Args:
        item_id: ID –ø—Ä–µ–¥–º–µ—Ç–∞
        count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
        
    Returns:
        –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å —ç–º–æ–¥–∑–∏
    """
    item_name = get_item_name(item_id)
    emoji = get_item_emoji(item_id)
    
    if count == 1:
        return f"{emoji}{item_name}"
    else:
        return f"{emoji}{item_name} x{count}" 